services:
  auth-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - app-network
      - auth-internal


  authentication-service:
      build:
        context: .
        args:
          REPO_USERNAME: ${REPO_USERNAME}
          REPO_TOKEN: ${REPO_TOKEN}
      restart: no
      ports:
        - "${APP_PORT}:8080"
      environment:
        KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
        REDIS_HOST: ${REDIS_HOST}
        REDIS_PORT: ${REDIS_PORT}

        DB_URL: jdbc:postgresql://auth-db:5432/${DB_NAME}
        DB_DRIVER: org.postgresql.Driver
        DB_USERNAME: ${DB_USERNAME}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_MAX_POOL_SIZE: ${DB_MAX_POOL_SIZE}
        DB_MIN_IDLE_CONNECTIONS: ${DB_MIN_IDLE_CONNECTIONS}
        DB_IDLE_TIMEOUT_MS: ${DB_IDLE_TIMEOUT_MS}
        DB_MAX_LIFETIME_MS: ${DB_MAX_LIFETIME_MS}

        GOOGLE_OAUTH2_CLIENT_ID: ${GOOGLE_OAUTH2_CLIENT_ID}
        GOOGLE_OAUTH2_CLIENT_SECRET: ${GOOGLE_OAUTH2_CLIENT_SECRET}
      depends_on:
        auth-db:
          condition: service_healthy
      networks:
        - app-network
        - auth-internal

volumes:
  auth-db-data:

networks:
  app-network:
    external: true
  auth-internal:
    driver: bridge